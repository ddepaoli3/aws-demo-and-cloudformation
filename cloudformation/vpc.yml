---
AWSTemplateFormatVersion: '2010-09-09'
Description: VPC With Public and Private Subnet
Parameters:
  AccountName:
    Type: String
  Environment:
    Type: String
    AllowedValues:
    - development
    - test
    - staging
    - production
    - sviluppo
    - collaudo
    - pre-produzione
    - produzione
  Project:
    Type: String
  VpcCidr:
    Type: String
    Description: IP Address range for the VPC
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  PrivateSubnetCidrA:
    Type: String
    Description: IP Address range for the private Subnet on Availability Zone A
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  PrivateSubnetCidrB:
    Type: String
    Description: IP Address range for the private Subnet on Availability Zone B
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  PublicSubnetCidrA:
    Type: String
    Description: IP Address range for the public Subnet on Availability Zone A
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  PublicSubnetCidrB:
    Type: String
    Description: IP Address range for the public Subnet on Availability Zone B
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock:
        Ref: VpcCidr
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - "-"
          - - Ref: AccountName
            - Ref: Project
            - Ref: Environment
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PrivateSubnetCidrA
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs:
            Ref: AWS::Region
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - "-"
          - - Ref: AccountName
            - Ref: Project
            - Ref: Environment
            - PrivateSubnetA
  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PrivateSubnetCidrB
      AvailabilityZone:
        Fn::Select:
        - 1
        - Fn::GetAZs:
            Ref: AWS::Region
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - "-"
          - - Ref: AccountName
            - Ref: Project
            - Ref: Environment
            - PrivateSubnetB
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PublicSubnetCidrA
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs:
            Ref: AWS::Region
      MapPublicIpOnLaunch: 'true'
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - "-"
          - - Ref: AccountName
            - Ref: Project
            - Ref: Environment
            - PublicSubnetA
  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PublicSubnetCidrB
      AvailabilityZone:
        Fn::Select:
        - 1
        - Fn::GetAZs:
            Ref: AWS::Region
      MapPublicIpOnLaunch: 'true'
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - "-"
          - - Ref: AccountName
            - Ref: Project
            - Ref: Environment
            - PublicSubnetB
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - "-"
          - - Ref: AccountName
            - Ref: Project
            - Ref: Environment
            - IGW
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  NAT:
    DependsOn: InternetGatewayAttachment
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIP
        - AllocationId
      SubnetId:
        Ref: PublicSubnetA
  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  PrivateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - "-"
          - - Ref: AccountName
            - Ref: Project
            - Ref: Environment
            - Private
            - A
  PrivateRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - "-"
          - - Ref: AccountName
            - Ref: Project
            - Ref: Environment
            - Private
            - B
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - "-"
          - - Ref: AccountName
            - Ref: Project
            - Ref: Environment
            - Public
  PrivateSubnetRouteTableAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnetA
      RouteTableId:
        Ref: PrivateRouteTableA
  PrivateSubnetRouteTableAssociationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnetB
      RouteTableId:
        Ref: PrivateRouteTableB
  PublicSubnetRouteTableAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnetA
      RouteTableId:
        Ref: PublicRouteTable
  PublicSubnetRouteTableAssociationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnetB
      RouteTableId:
        Ref: PublicRouteTable
  PrivateRouteA:
    Type: AWS::EC2::Route
    DependsOn: NAT
    Properties:
      RouteTableId:
        Ref: PrivateRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NAT
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  PrivateNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - "-"
          - - Ref: AccountName
            - Ref: Project
            - Ref: Environment
            - PrivateACL
  PublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - "-"
          - - Ref: AccountName
            - Ref: Environment
            - PublicACL
  InboundPrivateNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivateNetworkAcl
      RuleNumber: '100'
      Protocol: "-1"
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '0'
        To: '65535'
  OutBoundPrivateNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivateNetworkAcl
      RuleNumber: '100'
      Protocol: "-1"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '0'
        To: '65535'
  InboundPublicNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: '100'
      Protocol: "-1"
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '0'
        To: '65535'
  OutBoundPublicNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: '100'
      Protocol: "-1"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '0'
        To: '65535'
  PrivateSubnetNetworkAclAssociationA:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnetA
      NetworkAclId:
        Ref: PrivateNetworkAcl
  PrivateSubnetNetworkAclAssociationB:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnetB
      NetworkAclId:
        Ref: PrivateNetworkAcl
  PublicSubnetNetworkAclAssociationA:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnetA
      NetworkAclId:
        Ref: PublicNetworkAcl
  PublicSubnetNetworkAclAssociationB:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnetB
      NetworkAclId:
        Ref: PublicNetworkAcl
Outputs:
  VPCId:
    Description: VPCId of the newly created VPC
    Value:
      Ref: VPC
    Export:
      Name:
        !Sub "${AWS::StackName}-VPC-id"
  PrivateSubnet:
    Description: SubnetID of private subnet
    Value:
      Fn::Join:
      - ","
      - - Ref: PrivateSubnetA
        - Ref: PrivateSubnetB
  PublicSubnet:
    Description: SubnetID of public subnet
    Value:
      Fn::Join:
      - ","
      - - Ref: PublicSubnetA
        - Ref: PublicSubnetB
    Export:
      Name:
        !Sub "${AWS::StackName}-PublicSubnet"
  PublicSubnetA:
    Description: SubnetId of PublicSubnetA subnet
    Value:
      Ref: PublicSubnetA
    Export:
      Name:
        !Sub "${AWS::StackName}-PublicSubnetA"
  PrivateSubnetA:
    Description: SubnetId of PrivateSubnetA subnet
    Value:
      Ref: PrivateSubnetA
    Export:
      Name:
        !Sub "${AWS::StackName}-PrivateSubnetA"
  PublicSubnetB:
    Description: SubnetId of PublicSubnetB subnet
    Value:
      Ref: PublicSubnetB
    Export:
      Name:
        !Sub "${AWS::StackName}-PublicSubnetB"
  PrivateSubnetB:
    Description: SubnetId of PrivateSubnetB subnet
    Value:
      Ref: PrivateSubnetB
    Export:
      Name:
        !Sub "${AWS::StackName}-PrivateSubnetB"
  VpcCidr:
    Description: VPC Network in CIDR format
    Value:
      !GetAtt VPC.CidrBlock
    Export:
      Name:
        !Sub "${AWS::StackName}-VpcCidr"
  PrivateRouteTableA:
    Description: RouteTableId of the private subnet A
    Value:
      Ref: PrivateRouteTableA
    Export:
      Name:
        !Sub "${AWS::StackName}-PrivateRouteTableA"
  PrivateRouteTableB:
    Description: RouteTableId of the private subnet B
    Value:
      Ref: PrivateRouteTableB
    Export:
      Name:
        !Sub "${AWS::StackName}-PrivateRouteTableB"
  InternetGateway:
    Description: Internet Gateway ID
    Value:
      Ref: InternetGateway
    Export:
      Name:
        !Sub "${AWS::StackName}-IGW"
